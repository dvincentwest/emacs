#+TITLE: Vince's Emacs Configuration For NonWindows Systems
#+AUTHOR: Vince West

* Packages

** Projectile
#+BEGIN_SRC emacs-lisp
(use-package projectile
  :init
  (setq projectile-completion-system 'ivy)
  :bind-keymap ("C-c p" . projectile-command-map)
  :config
  )
(projectile-mode +1)
(counsel-projectile-mode)
(define-key projectile-mode-map (kbd "C-c C-p") 'projectile-command-map)
#+END_SRC

** Ag
#+BEGIN_SRC emacs-lisp
(use-package ag :ensure t)
#+END_SRC

** Magit
#+BEGIN_SRC emacs-lisp
(use-package magit
  ;; :init
  )
#+END_SRC

** code-cells

#+begin_src emacs-lisp
(use-package code-cells)
#+end_src

** Ledger-Mode
#+BEGIN_SRC emacs-lisp
(use-package ledger-mode
  :init
  :config
  (defun ledger-revert ()
	(interactive)
	(if (not (eq major-mode 'ledger-mode))
	  (ledger-mode))
	(revert-buffer t t t)
	(ledger-mode-clean-buffer)))
#+END_SRC

** Ranger
#+BEGIN_SRC emacs-lisp
(use-package ranger)
#+END_SRC

** Flycheck
#+BEGIN_SRC emacs-lisp
(use-package flycheck
  :ensure t
  )
;; (add-hook 'c++-mode-hook 'flycheck-mode)
(add-hook 'fortran-mode-hook 'flycheck-mode)
(add-hook 'f90-mode-hook 'flycheck-mode)
(setq-default flycheck-gfortran-language-standard "gnu")
#+END_SRC

** Eglot
#+BEGIN_SRC emacs-lisp
(use-package eglot
  :ensure t
  )
(add-hook 'c-mode-hook 'eglot-ensure)
(add-hook 'c++-mode-hook 'eglot-ensure)
(add-hook 'python-mode-hook 'eglot-ensure)
#+END_SRC

** Python-Black
#+begin_src emacs-lisp
(use-package python-black
  :demand t
  :after python)

(add-hook 'python-mode-hook (lambda () (local-set-key (kbd "C-S-s-l") #'python-black-buffer)))

#+end_src
** opencl-mode
#+begin_src emacs-lisp
(use-package opencl-mode)
#+end_src

** RealGUD
#+begin_src emacs-lisp
(use-package realgud)
#+end_src
* Settings

** C++ Mode

#+BEGIN_SRC emacs-lisp
(add-hook 'c++-mode-hook (lambda() (setq evil-shift-width 2)))
#+END_SRC

** Fortran Mode

#+BEGIN_SRC emacs-lisp
(add-hook 'fortran-mode-hook (lambda() (setq evil-shift-width 2)))
(add-hook 'f90-mode-hook (lambda() (setq evil-shift-width 2)))
(setq flycheck-gfortran-args '("-ffixed-line-length-120"))
#+END_SRC

** Misc

#+BEGIN_SRC emacs-lisp
(server-start)
#+END_SRC

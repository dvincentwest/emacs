#+TITLE: Vince's Emacs Configuration For NonWindows Systems
#+AUTHOR: Vince West

* Packages

** Projectile
#+BEGIN_SRC emacs-lisp
(use-package projectile
  :init
  (setq projectile-completion-system 'ivy)
  :bind-keymap ("C-c p" . projectile-command-map)
  :config
  )
(projectile-mode +1)
(counsel-projectile-mode)
(define-key projectile-mode-map (kbd "C-c C-p") 'projectile-command-map)
#+END_SRC

** Ag
#+BEGIN_SRC emacs-lisp
(use-package ag :ensure t)
#+END_SRC

** Magit
#+BEGIN_SRC emacs-lisp
(use-package magit
  :init
  (use-package evil-magit)
  )
#+END_SRC

** elpy
#+BEGIN_SRC emacs-lisp
(use-package elpy
  :init
  (setq python-shell-interpreter "~/miniconda3/bin/ipython"
		python-shell-interpreter-args "-i --simple-prompt")
  (elpy-enable)
  (if (not (eq system-type 'windows-nt))
  	  (setq elpy-rpc-python-command "~/miniconda3/bin/python")
    ;; (setq python-shell-interpreter "ipython")
  	)
  :config
  ;; (define-key elpy-mode-map (kbd "C-c .") 'elpy-goto-definition)
  (pyvenv-activate "~/miniconda3/bin/")
  :bind (:map elpy-mode-map
         ("C-s-S-l" . elpy-black-fix-code)
         ("C-c ." . elpy-goto-definition)
         )
  )
#+END_SRC
** Ledger-Mode
#+BEGIN_SRC emacs-lisp
(use-package ledger-mode
  :init
  :config
  (defun ledger-revert ()
	(interactive)
	(if (not (eq major-mode 'ledger-mode))
	  (ledger-mode))
	(revert-buffer t t t)
	(ledger-mode-clean-buffer)))
#+END_SRC

** Ranger
#+BEGIN_SRC emacs-lisp
(use-package ranger)
#+END_SRC

** Flycheck
#+BEGIN_SRC emacs-lisp
(use-package flycheck
  :ensure t
  )
(add-hook 'c++-mode-hook 'flycheck-mode)
(add-hook 'fortran-mode-hook 'flycheck-mode)
(add-hook 'f90-mode-hook 'flycheck-mode)
(setq-default flycheck-gfortran-language-standard "gnu")
#+END_SRC
* Settings

** C++ Mode

#+BEGIN_SRC emacs-lisp
(add-hook 'c++-mode-hook (lambda() (setq evil-shift-width 2)))
#+END_SRC

** Fortran Mode

#+BEGIN_SRC emacs-lisp
(add-hook 'fortran-mode-hook (lambda() (setq evil-shift-width 2)))
(add-hook 'f90-mode-hook (lambda() (setq evil-shift-width 2)))
(setq flycheck-gfortran-args '("-ffixed-line-length-120"))
#+END_SRC

** Misc

#+BEGIN_SRC emacs-lisp
(server-start)
#+END_SRC
